import alf.algorithms.hypernetwork_algorithm

# dataset config
create_dataset.dataset_name='mnist'
create_dataset.train_batch_size=50
create_dataset.test_batch_size=100

# Lenet for MNIST
CONV_LAYER_PARAMS=((6, 5, 1, 2, 2), (16, 5, 1, 0, 2), (120, 5, 1))
FC_LAYER_PARAMS = ((84, True), )
HIDDEN_LAYERS = (512, 1024)

hypernet/Adam.lr=1e-4
hypernet/Adam.weight_decay=1e-4

# algorithm config
HyperNetwork.conv_layer_params=%CONV_LAYER_PARAMS
HyperNetwork.fc_layer_params=%FC_LAYER_PARAMS
HyperNetwork.hidden_layers=%HIDDEN_LAYERS
HyperNetwork.particles=10
HyperNetwork.noise_dim=256
HyperNetwork.par_vi = 'svgd'
HyperNetwork.loss_type = 'classification'
HyperNetwork.optimizer=@hypernet/Adam()

import alf.algorithms.hypernetwork_networks
ParamConvNet.use_bias=True

# training config
SupervisedTrainerConfig.algorithm_ctor=@HyperNetwork
SupervisedTrainerConfig.epochs=1000
SupervisedTrainerConfig.debug_summaries=True
SupervisedTrainerConfig.summarize_grads_and_vars=True
SupervisedTrainerConfig.eval_accuracy=True
SupervisedTrainerConfig.eval_uncertainty=True






